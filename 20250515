# 1. YOLO 설치
!pip install -q ultralytics

# 2. 라이브러리 임포트
from ultralytics import YOLO
import cv2
import matplotlib.pyplot as plt
from google.colab import files
import numpy as np

# 3. 더 강력한 모델 로드 (yolov8x.pt)
model = YOLO('yolov8x.pt')  # 가장 크고 정확한 모델

# 4. 이미지 업로드
uploaded = files.upload()
img_path = list(uploaded.keys())[0]

# 5. 이미지 로드 및 RGB 변환
img_bgr = cv2.imread(img_path)
img_rgb = cv2.cvtColor(img_bgr, cv2.COLOR_BGR2RGB)

# 6. 모델 추론
results = model(img_rgb)

# 7. 고양이 클래스만 필터링 (COCO class_id 15), threshold ↓ 낮춤
cat_class_id = 15
min_conf = 0.25  # 더 낮은 confidence 허용

cat_found = False
for result in results:
    for box in result.boxes:
        cls_id = int(box.cls.cpu())
        conf = float(box.conf.cpu())
        if cls_id == cat_class_id and conf >= min_conf:
            cat_found = True
            x1, y1, x2, y2 = map(int, box.xyxy[0].cpu().numpy())
            
            # 박스 그리기
            cv2.rectangle(img_rgb, (x1, y1), (x2, y2), (0, 255, 0), 3)
            label = f'Cat {conf:.2f}'
            cv2.putText(img_rgb, label, (x1, y1 - 10), cv2.FONT_HERSHEY_SIMPLEX, 0.9, (0, 255, 0), 2)

# 8. 결과 시각화
plt.figure(figsize=(10, 10))
plt.imshow(img_rgb)
plt.axis('off')
if cat_found:
    plt.title("모든 고양이 탐지 완료 ✅")
else:
    plt.title("고양이 미탐지 ❌")
plt.show()
